---
- name: Make sure loadbalancer_address is provided for multi-master
  fail:
    msg: >-
      Master count {{ master_count }} is greater than 1 and loadbalancer_address is not provided.
      Please create the loadbalancer and provide the address of it with variable loadbalancer_address.
      Refer loadbalancer config here:
      https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/#create-load-balancer-for-kube-apiserver
  vars:
     master_count: "{{ groups['master'] | length }}"
  when: master_count|int > 1 and loadbalancer_address is not defined

- name: Make sure loadbalancer_address is reachable
  shell: "nc -vz {{ loadbalancer_address.split(':')[0] }} {{ loadbalancer_address.split(':')[1] }}"
  when: loadbalancer_address is defined

- name: Install pip for installing kubernetes module for ansible
  apt:
    pkg:
      - python-pip
      - python3-pip
      - python-apt
    update_cache: yes

- name: Install openshift pip package for ansible to query kubernetes objects
  shell:
    cmd: "/usr/bin/{{ item.cmd }} install openshift"
    creates: "/usr/local/lib/{{ item.version }}/dist-packages/kubernetes"
  with_items:
    - { cmd: 'pip', version: 'python2.7' }
    - { cmd: 'pip3', version: 'python3.6' }

- name: Check if kubeadm has already run
  stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: kubeadm_ca

- name: Init cluster if needed
  include_tasks: init.yaml
  vars:
    master_index: "{{ groups['master'].index(inventory_hostname) }}"
  when: not kubeadm_ca.stat.exists and master_index|int == 0

- name: Join other masters to main master if needed
  vars:
    master_count: "{{ groups['master'] | length }}"
    master_index: "{{ groups['master'].index(inventory_hostname) }}"
  when: not kubeadm_ca.stat.exists and master_count|int > 1 and master_index|int != 0
  include_tasks: join.yaml

- name: Enable and check kubelet service
  systemd:
    name: kubelet
    daemon_reload: yes
    state: started
    enabled: yes
  register: started_kubelet

- name: Create additional user
  include_tasks: user.yaml
  when: additional_user.create
  run_once: yes

